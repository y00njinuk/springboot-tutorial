language: java

jdk:
  - openjdk8

# Travis CI를 수행되는 브랜치 지정
# 해당 브랜치에 Push 후 CI 작업이 시작
branches:
  only:
    - master

# 해당 디렉토리에 있는 파일들을 캐시
# Travis CI 서버의 Home으로 지정
cache:
  directories:
    - '$HOME/.m2.repository'
    - '$HOME/.gradle'

# branches에서 지정한 브랜치에 push 후 수행되는 스크립트
script: "./gradlew clean build"

# deploy 명령어가 수행되기 전에 작업
before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/ # scripts 폴더 내 스크립트 포함
  - cp appspec.yml before-deploy/ # appspec.yml 포함
  - cp build/libs/*.jar before-deploy/ # jar 파일 포함
  - cd before-deploy && zip -r before-deploy * # before-deploy 디렉토리 압축
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/springboot-tutorial.zip

# 외부 서비스와 연동될 행위들을 정의
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis Repo 참고
    secret_access_key: $AWS_SECRET_KEY # Travis Repo 참고
    bucket: springboot-tutorial-s3
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # s3 버킷에 올린 파일들의 접근을 private으로 정의
    local_dir: deploy # 해당 위치에 속한 파일들만 s3 버킷으로 전송
    wait-until-deployed: true
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis Repo 참고
    secret_access_key: $AWS_SECRET_KEY # Travis Repo 참고
    bucket: springboot-tutorial-s3
    key: springboot-tutorial.zip # s3 버킷에 저장된 zip 파일
    bundle_type: zip
    application: springboot-tutorial-webservice # Codedeploy 애플리케이션
    deployment_group: springboot-tutorial-webservice-group # Codedeploy 애플리케이션 그룹명
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - jinuknamja@gmail.com